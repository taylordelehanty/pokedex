Taylor Delehanty

I spent most of my time on Friday looking up different APIs to see what I might want to do. Facebook, Twitter, and FRED API's didn't catch my attention, so I decided to look up API's that people might have created about the things I do like. After searching for a few video games, I found one that I might love to play with:
I found a Pokemon API (http://pokeapi.co/) that has really good documentation as well as really extensive data on all 700+ Pokemon.
Now, there's more to Pokemon than there seems: it's not just about getting the "strongest" Pokemon, because type-matchups (not only the type that the Pokemon is, but the types of moves it uses on its opponent) play a huge role in who will win a Pokemon battle. There are also many variables on the back-end that people playing Pokemon might not consider - things like a Pokemon's growth rate, abilities, and Stats. Stats are basically quantified performance levels in 6 areas of battle performance (Hit points (HP), Attack (ATK), Special Attack (SP.ATK), Defense (DEF), Special Defense (SP.DEF), Speed (SPD)). The variables that affect how well the Pokemon grows, such as Effort Value (EV) yield and Experience (EXP) yield are usually things that experienced and super-competitive Pokemon Masters will pay attention to so that they can have the highest chance of winning. Otherwise, recreational users don't really pay that much attention to these things.
Some or all of this may seem either new or like a lot to people who might want to play or are playing Pokemon, so they only consider one layer when choosing their Pokemon team. With this API, one can look up any extensive information on a Pokemon to see whether or not it really would survive against Blaine's Magmar or Lance's Dragonite, or even Red's Pikachu.
My final project would be to try to develop as extensive of a client application as possible to find the best matchup against a Pokemon that the user could type in. Because this API doesn't contain level-specific information (I do not know how to do the calculations for a Pokemon's Stats at a certain level based off of this information, but there might be some information on it out there somewhere) but instead the information I would give would be solely derived from the base-stats of a Pokemon. Looking at type would be the first thing this client application would accomplish. After getting the basic type-matching down, I would try to delve a little further in exploring Stat-comparisons, but it will be hard not to get into bias of which Stats I think are more important. Then I will look at the types of moves each Pokemon can learn, and which will be most effective against the opponent the client chose. There might also be a little bit of bias here as well because there are moves that are better than others and I know what they are, but I will try to avoid picking the same moves over and over for a Pokemon to use.
So hopefully by the end of the project, my client application will be able to pick out a Pokemon that is at a type advantage to the possible moves the opponent might have; a Pokemon that has comparable Stats to the opponents, so that if the opponent has a high SP.ATK and low DEF, the Pokemon chosen would have high SP.DEF and high ATK; a Pokemon that has the potential to learn moves that will have a type-advantage to the opponent.
